TheTophKids
Aidan Griffin
Woosuk Lee
Andrew Shao
pd 1
---------------------
Casino







/////////// Zone of Reflection \\\\\\\\\\\
------------------------------------------
OBSTACLES OVERCOME
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Initially, we thought the most difficult part of this project was going to be
incorporating betting. So at first, all we wanted to do was to make sure that
for poker it returned the right hand that a person hand and the correct highest
value was returned and for Blackjack, that the isBusted() method worked and the
pesky ace (could be one or 11) was resolved. That was done earlier that we
expected, so we really got a head start on betting and looking back, we felt
like we needed every bit of that.

UNRESOLVED ISSUES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
For PokerPlayer, something that was very annoying was that no matter what the
pairs the AI and user had were if they both had a pair, the AI would always win
by default because we made it so that the AI would win all potential ties. We
fixed this problem by adding a highestPair() method.

COOL STUFF LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Many of us had a basic grasp of these games but didn't know how to incorporate
betting into them. Some of us only knew how to play Chinese poker and not
Texas Hold'em. So learning how betting really worked in both Blackjack and
Texas Hold'em was something we felt that was very interesting.

MID-DEVELOPMENT DESIGN CHANGES
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
We originally planned on having all the checking if something is a hand is a
certaincombination in the TexasHoldem class which extends CasinoGame. Once we
got started in coding it, we realized that it was a good idea to have a
PokerPlayer method that extends Player instead of CasinoGame. We did this
because the constructor calls were very similar so just using the super
keyword would have gotten it done. 

LESSONS LEARNED
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
We made way to many mid-developmental changes during our final project,
particularly with the poker player. When we were working on incorporating betting for all situations, we realized how arduous and unnecessary it was to repetitively write the exact same code. Making a flow chart at this step would have helped but instead we delved right into the code and we could have saved time. Otherwise, we planned this out very well and it went out as planned.
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


 ______   ______   __   __   __       ______   _______     
/_____/\ /_____/\ /_/\ /_/\ /_/\     /_____/\ /______/\    
\:::_ \ \\::::_\/_\:\ \\ \ \\:\ \    \:::_ \ \\::::__\/__  
 \:\ \ \ \\:\/___/\\:\ \\ \ \\:\ \    \:\ \ \ \\:\ /____/\ 
  \:\ \ \ \\::___\/_\:\_/.:\ \\:\ \____\:\ \ \ \\:\\_  _\/ 
   \:\/.:| |\:\____/\\ ..::/ / \:\/___/\\:\_\ \ \\:\_\ \ \ 
    \____/_/ \_____\/ \___/_(   \_____\/ \_____\/ \_____\/ 
==============================================================
||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||||


2018-01-08
--------------------------------------------------------------
Aidan Griffin : coded the isFullHouse() and isTwoPair() methods in PokerPlayer(the last two methods we were missing)
Woosuk Lee : Made Woo.java compilable and runnable with main method and added Keyboard.java for us to incorporate user input
Andrew Shao : updated our README file
==============================================================
2018-01-09
--------------------------------------------------------------
Aidan Griffin : Wrote our flowchart that we handed in
Woosuk Lee : Wrote our to do checklist
Andrew Shao: Helped Woosuk craft the to do checklist
==============================================================
2018-01-10
--------------------------------------------------------------
Aidan Griffin : added basic template of playing poker capibility in terminal. 
Got it to successfully print out the hand the user had succesfully
Woosuk/Aidan : worked on TexasHoldem.java's play method which returns the winner of a game. We can and probably should change the name of the method to something more suit-able(no pun intended)
Andrew Shao : coded the blackjack game with all its methods and it works!
==============================================================
2018-01-11
--------------------------------------------------------------
Aidan Griffin: incorporated pre-flop betting and printed out what the user had in has hand at the end
==============================================================
2018-01-13
--------------------------------------------------------------
Aidan Griffin: made many of the repetitive stuff in Woo.java's main method into their own methods such as playGame and checkHand
==============================================================
2018-01-14
--------------------------------------------------------------
Aidan Griffin: created new variable in Woo called pot which made distributing the money earned by a Pokerplayer properly easier to do
==============================================================
2018-01-15
--------------------------------------------------------------
Aidan Griffin: made minor changes to how pot was added in Woo.java and moved the methods inTexasHoldem.java into PokerPlayer.java because it seemed pointless to have TexasHoldem.java
Woosuk Lee: added betting mechanism to the blackjack game and edited some minor displayings on the terminal.
Andrew Shao: made blackjack compatible with Woo.java
==============================================================
2018-01-16
--------------------------------------------------------------
Aidan Griffin: fixed major bug with keeping player balance over several games
Woosuk Lee: made a small change in betting and fixed small errors in displaying betting messages
Andrew Shao: fixed error involving Blackjack detection and fixed error in Blackjack display messages